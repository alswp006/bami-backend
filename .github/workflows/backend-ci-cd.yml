# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Bami Backend CI/CD
run-name: ${{ github.actor }} 님이 안전한 개발을 위해 test를 하고 있습니다! 🚀

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Download API key from private repository
      uses: actions/checkout@v2
      with:
        repository: ktb-eight/api-key
        token: ${{ secrets.TOKEN_GITHUB }}
        path: api-key

    - name: Copy application-dev.yml
      run: |
        cp api-key/application-dev.yml src/main/resources/

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle
      run: ./gradlew build

    - name: Build Docker image
      run: docker build -t backend-app:latest .

    - name: Push Docker image
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker tag backend-app:latest ${{ secrets.DOCKER_USERNAME }}/backend-app:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/backend-app:latest

    - name: Deploy to Server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
        docker pull ${{ secrets.DOCKER_USERNAME }}/backend-app:latest
        docker stop backend-app || true
        docker rm backend-app || true
        docker run -d -p 8080:8080 --name backend-app ${{ secrets.DOCKER_USERNAME }}/backend-app:latest
        EOF

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
